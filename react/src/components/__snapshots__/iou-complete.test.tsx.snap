// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<IouComplete /> should render correctly 1`] = `
<div
  id="completeRequestItem"
>
  <div
    className=""
    onClick={[Function]}
  >
    <WithStyles(ForwardRef(Checkbox))
      checked={true}
      checkedIcon={
        <UNDEFINED
          color="primary"
          id="completeIconSize"
        />
      }
      color="primary"
      disabled={true}
      icon={
        <UNDEFINED
          color="primary"
          id="completeIconSize"
        />
      }
    />
    <div
      id="IouTaskComplete"
    >
      <WithStyles(ForwardRef(Typography))
        id="taskCompleter"
      >
        Kevin
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Popover))
        anchorEl={null}
        anchorOrigin={
          Object {
            "horizontal": "center",
            "vertical": "bottom",
          }
        }
        id="popUpMargin"
        onClose={[Function]}
        open={false}
        transformOrigin={
          Object {
            "horizontal": "center",
            "vertical": "top",
          }
        }
      >
        <WithStyles(ForwardRef(Typography))
          id="taskDetailPopUp"
        >
          Full Display Name
          <WithStyles(ForwardRef(Divider))
            id="taskPopUpDivider"
          />
          Kevin
        </WithStyles(ForwardRef(Typography))>
      </WithStyles(ForwardRef(Popover))>
      <WithStyles(ForwardRef(Typography))
        id="taskTimeStamp"
      >
        02/02/2020
      </WithStyles(ForwardRef(Typography))>
    </div>
  </div>
  <WithStyles(ForwardRef(Dialog))
    TransitionComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "muiSupportAuto": true,
        "propTypes": Object {
          "children": [Function],
          "disableStrictModeCompat": [Function],
          "in": [Function],
          "onEnter": [Function],
          "onEntered": [Function],
          "onEntering": [Function],
          "onExit": [Function],
          "onExited": [Function],
          "onExiting": [Function],
          "style": [Function],
          "timeout": [Function],
        },
        "render": [Function],
      }
    }
    fullWidth={true}
    id="completeForm"
    maxWidth="xs"
    onClose={[Function]}
    open={false}
    scroll="body"
  >
    <WithStyles(ForwardRef(DialogTitle))
      disableTypography={true}
    >
      <WithStyles(ForwardRef(Typography))
        id="modalTitle"
        variant="h5"
      >
        IOU Proof Submission
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(DialogTitle))>
    <WithStyles(ForwardRef(Divider)) />
    <WithStyles(ForwardRef(DialogContent))
      className="content"
      id="completeDetailsTable"
    >
      <WithStyles(ForwardRef(DialogContentText))
        variant="h6"
      >
        IOU Details
      </WithStyles(ForwardRef(DialogContentText))>
      <WithStyles(ForwardRef(TableContainer))
        id="infoTable"
      >
        <WithStyles(ForwardRef(Table))>
          <WithStyles(ForwardRef(TableBody))>
            <WithStyles(ForwardRef(TableRow))>
              <WithStyles(ForwardRef(TableCell))
                align="center"
                className="infoTableCell"
                id="infoTableTitle"
              >
                Created by:
              </WithStyles(ForwardRef(TableCell))>
              <WithStyles(ForwardRef(TableCell))
                align="center"
                className="infoTableCell"
                id="infoTableContent"
              >
                James
              </WithStyles(ForwardRef(TableCell))>
            </WithStyles(ForwardRef(TableRow))>
            <WithStyles(ForwardRef(TableRow))>
              <WithStyles(ForwardRef(TableCell))
                align="center"
                id="infoTableTitle"
              >
                Created on:
              </WithStyles(ForwardRef(TableCell))>
              <WithStyles(ForwardRef(TableCell))
                align="center"
                id="infoTableContent"
              >
                02/02/2020
              </WithStyles(ForwardRef(TableCell))>
            </WithStyles(ForwardRef(TableRow))>
            <WithStyles(ForwardRef(TableRow))>
              <WithStyles(ForwardRef(TableCell))
                align="center"
                id="infoTableTitle"
              >
                Task:
              </WithStyles(ForwardRef(TableCell))>
              <WithStyles(ForwardRef(TableCell))
                align="center"
                id="infoTableContent"
              >
                Clean the fridge
              </WithStyles(ForwardRef(TableCell))>
            </WithStyles(ForwardRef(TableRow))>
          </WithStyles(ForwardRef(TableBody))>
        </WithStyles(ForwardRef(Table))>
      </WithStyles(ForwardRef(TableContainer))>
    </WithStyles(ForwardRef(DialogContent))>
    <WithStyles(ForwardRef(DialogContent))
      className="Content"
      id="completePopUpRewards"
    >
      <WithStyles(ForwardRef(DialogContentText))
        variant="h6"
      >
        Rewards
      </WithStyles(ForwardRef(DialogContentText))>
      <IouFavourSingle
        giverDisplayName="James Lee"
        item={
          Object {
            "display_name": "Hug",
            "id": "1",
          }
        }
        key="1"
        recieverDisplayName="?"
      />
      <IouFavourSingle
        giverDisplayName="James Lee"
        item={
          Object {
            "display_name": "Coffee",
            "id": "2",
          }
        }
        key="2"
        recieverDisplayName="?"
      />
    </WithStyles(ForwardRef(DialogContent))>
    <WithStyles(ForwardRef(DialogContent))
      className="content"
    >
      <WithStyles(ForwardRef(DialogContentText))
        variant="h6"
      >
        Upload proof?
      </WithStyles(ForwardRef(DialogContentText))>
      <input
        accept="image/*"
        id="inputProof"
        onChange={[Function]}
        type="file"
      />
      <label
        htmlFor="inputProof"
      >
        <WithStyles(ForwardRef(Button))
          color="primary"
          component="span"
          variant="contained"
        >
          UPLOAD
        </WithStyles(ForwardRef(Button))>
      </label>
      <WithStyles(ForwardRef(DialogContentText))
        id="completeProofFileInfo"
        variant="body2"
      >
        Upload an image (JPEG/PNG) before pressing the 'Submit' button
      </WithStyles(ForwardRef(DialogContentText))>
    </WithStyles(ForwardRef(DialogContent))>
    <WithStyles(ForwardRef(Divider)) />
    <WithStyles(ForwardRef(DialogActions))>
      <WithStyles(ForwardRef(Button))
        autoFocus={true}
        color="primary"
        disabled={true}
        id="createRequest"
        onClick={[Function]}
        size="large"
      >
        Submit
      </WithStyles(ForwardRef(Button))>
      <WithStyles(ForwardRef(Button))
        color="primary"
        onClick={[Function]}
        size="large"
      >
        Nevermind
      </WithStyles(ForwardRef(Button))>
    </WithStyles(ForwardRef(DialogActions))>
  </WithStyles(ForwardRef(Dialog))>
  <WithStyles(ForwardRef(Snackbar))
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    onClose={[Function]}
    open={false}
  />
</div>
`;
